{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddComment","useEffect","submitFormHandler","event","preventDefault","EnteredText","current","value","commentData","text","quoteid","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addedCommentsHandler","useCallback","length","onClick","HighlightedQuote","history","useHistory","isLoading","setIsLoading","DeleteQuote","quote","author","button","console","log","push","QuoteDetails","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.b49b7567.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\",\"button\":\"HighlightedQuote_button__3iDRk\"};","import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, onAddComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const EnteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: {\n        text: EnteredText,\n      },\n      quoteid: props.quoteId,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const quoteId = params.quoteId;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments Found.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddComment={addedCommentsHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport { DeleteQuote } from '../../lib/api';\n\nimport classes from './HighlightedQuote.module.css';\nconst HighlightedQuote = (props) => {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const { sendRequest, status, error } = useHttp(DeleteQuote, false);\n\n  const deletionHandler = () => {\n    console.log('delete ' + props.id);\n    setIsLoading(true);\n    sendRequest(props.id);\n    setIsLoading(false);\n    history.push('/new-quote');\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  return (\n    <Fragment>\n      {isLoading && <LoadingSpinner />}\n      <figure className={classes.quote}>\n        <p>{props.text}</p>\n        <figcaption>{props.author}</figcaption>\n        <button className={classes.button} onClick={deletionHandler}>\n          Delete\n        </button>\n      </figure>\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect, useState, useCallback } from 'react';\nimport { useParams, Route, NavLink, useRouteMatch } from 'react-router-dom';\n\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { getSingleQuote } from '../lib/api';\n\nconst QuoteDetails = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    sendRequest(quoteId);\n    setIsLoading(false);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      {isLoading && <LoadingSpinner />}\n      <HighlightedQuote\n        text={loadedQuote.text}\n        author={loadedQuote.author}\n        id={loadedQuote.id}\n      />\n      <div className=\"centered\">\n        <Route path={match.path} exact>\n          <NavLink className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </NavLink>\n        </Route>\n      </div>\n      <Route path={`${match.path}/comments/`}>\n        <Comments quote={loadedQuote} onAddComment={addedCommentsHandler} />\n        <div className=\"centered\">\n          <NavLink className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </NavLink>\n        </div>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"],"sourceRoot":""}