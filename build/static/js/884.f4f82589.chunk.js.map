{"version":3,"file":"static/js/884.f4f82589.chunk.js","mappings":"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","sources":["hooks/use-http.js","lib/api.js","webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-73287-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(FIREBASE_DOMAIN + 'quotes.json');\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    FIREBASE_DOMAIN + '/comments/' + requestData.quoteid + '.json',\n    {\n      method: 'POST',\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n\nexport async function DeleteQuote(props) {\n  const res = await fetch(\n    `https://quotes-73287-default-rtdb.firebaseio.com/comments/${props}.json`,\n    {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  if (!res.ok) {\n    throw new Error('Could not detele quote.');\n  }\n\n  const responce = await fetch(\n    `https://quotes-33a21-default-rtdb.firebaseio.com/quotes/${props}.json`,\n    {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  if (!responce.ok) {\n    throw new Error('Could not detele quote.');\n  }\n\n  return true;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__V1053\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__60cxN\",\"loading\":\"QuoteForm_loading__bZB4D\",\"control\":\"QuoteForm_control__sLOTA\",\"actions\":\"QuoteForm_actions__siqWw\"};","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const quoteInputRef = useRef();\n  const [focusState, setFocusState] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredQuote = quoteInputRef.current.value;\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredQuote,\n    });\n  }\n\n  const finishEnteringHandler = () => {\n    setFocusState(false);\n  };\n\n  const formFocusHandler = () => {\n    setFocusState(true);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={focusState}\n        message={(location) =>\n          'Are you sure you want to leave this page. All your data will be lost'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"quote\">Text</label>\n            <textarea id=\"quote\" rows=\"5\" ref={quoteInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return (\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","quoteid","commentData","commentId","name","getAllComments","transformedComments","commentObj","DeleteQuote","props","className","classes","children","authorInputRef","useRef","quoteInputRef","useState","focusState","setFocusState","Fragment","when","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredQuote","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","ref","rows","onClick","useHttp","history","useHistory","useEffect"],"sourceRoot":""}